services:
  kotlin-api-demo-db:
    container_name: kotlin-api-demo-db
    image: "postgres:17.4"
    build:
      context: ../../
      dockerfile: docker/postgres/Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kotlin-api-demo

  kotlin-api-demo-otel-collector:
    container_name: kotlin-api-demo-otel-collector
    image: otel/opentelemetry-collector:0.122.1
    build:
      context: ../../
      dockerfile: docker/otel/Dockerfile
    volumes:
      - ../otel/collector-config.yaml:/collector-config.yaml
    command: [ "--config=/collector-config.yaml" ]
    ports:
      - "1888:1888"   # pprof extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
    depends_on:
      - kotlin-api-demo-jaeger

  kotlin-api-demo-prometheus:
    container_name: kotlin-api-demo-prometheus
    image: prom/prometheus:v3.2.1
    build:
      context: ../../
      dockerfile: docker/prometheus/Dockerfile
    restart: always
    volumes:
      - ../prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  kotlin-api-demo-jaeger:
    container_name: kotlin-api-demo-jaeger
    image: jaegertracing/all-in-one:1.67.0
    build:
      context: ../../
      dockerfile: docker/jaeger/Dockerfile
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  kotlin-api-demo-grafana:
    container_name: kotlin-api-demo-grafana
    image: grafana/grafana:11.5.2
    build:
      context: ../../
      dockerfile: docker/grafana/Dockerfile
    volumes:
      - ../grafana/config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ../grafana/config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ../grafana/dashboards:/var/lib/grafana/dashboards
      - ../grafana/storage:/var/lib/grafana
    ports:
      - "3000:3000"
